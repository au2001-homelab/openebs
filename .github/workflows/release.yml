name: Release Tagging Workflow

on:
  release:
    types: [ created ]

jobs:
  release-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: cachix/install-nix-action@v31.3.0
      - name: Pre-populate nix-shell
        run: |
          export NIX_PATH=nixpkgs=$(jq '.nixpkgs.url' nix/sources.json -r)
          echo "NIX_PATH=$NIX_PATH" >> $GITHUB_ENV
          nix-shell --pure --run "echo" ./scripts/staging/shell.nix

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Mirror images from dev to Docker Hub
        run: |
          nix-shell --pure --run "./scripts/staging/mirror-images.sh \
            --source-namespace ghcr.io/${{ github.repository_owner }}/dev \
            --target-namespace docker.io/${{ github.repository_owner }} \
            --tag ${{ github.ref_name }}" ./scripts/staging/shell.nix

  release-kubectl-binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: cachix/install-nix-action@v31.3.0
      - name: Pre-populate nix-shell
        run: |
          export NIX_PATH=nixpkgs=$(jq '.nixpkgs.url' nix/sources.json -r)
          echo "NIX_PATH=$NIX_PATH" >> $GITHUB_ENV
          nix-shell --pure --run "echo" ./scripts/staging/shell.nix

      - name: Mirror kubectl artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          nix-shell --pure --run "./scripts/staging/kubectl-oci.sh pull \
            --tag ${{ github.ref_name }} \
            --namespace ${{ github.repository_owner }}/dev \
            --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }}" ./scripts/staging/shell.nix

          ./mayastor/scripts/github/release-artifacts.sh \
            --tag ${{ github.ref_name }} \
            --repo-org ${{ github.repository_owner }} \
            --upload ${{ github.event.repository.name }} \
            upload

  release-helm-chart:
    runs-on: ubuntu-latest
    needs: [release-images]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch openebs umbrella helm chart
        env:
          RAW_TAG: ${{ github.ref_name }}
          IMAGE_ORG: ${{ github.repository_owner }}
        run: |
          VERSION=${RAW_TAG#v}

          rm -rf charts
          mkdir -p charts-staged charts-final charts

          CHART_REF=oci://ghcr.io/${IMAGE_ORG}/helm/openebs
          helm pull "$CHART_REF" \
            --version ${VERSION} \
            --destination charts-staged

          tar -xzf charts-staged/openebs-"$VERSION".tgz -C charts-final

          mv charts-final/openebs/* charts

      - name: Publish openebs umbrella helm chart
        uses: stefanprodan/helm-gh-pages@v1.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: .
